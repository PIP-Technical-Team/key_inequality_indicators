keep = "left"
)
dt_use <- dt_use[, report := NULL]
dt_use[is.na(Forward), Forward := 100]
dt_use[is.na(Backward), Backward := 100]
dt_use[, Impute_Forward := (Backward >= Forward)]
# Do imputation
dt_use[,
Indicator := {
# Forward fill for Impute_Forward == FALSE
Indicator[Impute_Forward == FALSE] <-
nafill(Indicator[Impute_Forward == FALSE],
type = "locf")
# Backward fill for Impute_Forward == TRUE
Indicator[Impute_Forward == TRUE] <-
nafill(Indicator[Impute_Forward == TRUE],
type = "nocb")
# Return the modified Indicator
Indicator
}, by = country_name]
# Do imputation of comparable spells
dt_use[,
survey_comparability := {
# Forward fill for Impute_Forward == FALSE
survey_comparability[Impute_Forward == FALSE] <- na.locf(
survey_comparability[Impute_Forward == FALSE])
# Backward fill for Impute_Forward == TRUE
survey_comparability[Impute_Forward == TRUE] <- na.locf(
survey_comparability[Impute_Forward == TRUE],
fromLast=TRUE)
# Return the modified Indicator
survey_comparability
}, by = country_name]
# Years over which change occurs
dt_use[
,
ImputeYears:= min(Forward, Backward),
by = country_name
]
dt_use[
ImputeYears == 100,
ImputeYears := 0
]
# Keep only selected year
dt_use <- dt_use[ year == year_selected]
# Remove columns
dt_use[, c("Forward", "Backward") := NULL]
setnames(
dt_use,
old = "Indicator",
new = tolower(indicator)
)
# Return
return(dt_use)
}
dt_impute <- create_data_imputed_by_countries(dt_pip, countries_selected = dt_pip$country_name |> unique(), year_selected = 2010, indicator = "Gini", window_length = 0)
dt_impute2 <- create_data_imputed_by_countries(dt_pip, countries_selected = dt_pip$country_name |> unique(), year_selected = 2010, indicator = "Gini", window_length = 5)
dt_impute
dt_impute2
dt_impute[, .c(country_name, survey_comparability, year, gini)]
dt_impute[, .(country_name, survey_comparability, year, gini)]
dt_impute2[, .(country_name, survey_comparability, year, gini)]
dt_impute2[!country_name %chin% dt_impute$country_name, .(country_name, survey_comparability, year, gini)]
dt_impute2[!country_name %chin% dt_impute$country_name, .(country_name, survey_comparability, year, gini, median)]
create_data_imputed_by_countries_two_years <- function(
dt = dt_pip,
countries_selected  = c("South Africa", "Colombia", "United States"),
year1_selected      = 1998,
year2_selected      = 2005,
indicator           = c("Gini"),
welfare             = NULL, # if 'consumption' or 'income' then use *only* those
window_length       = 2
){
dt_use <- copy(dt)
dt_use <- dt_use[, MeanWelfare := mean]
# Data in Year 1
dt1 <- create_data_imputed_by_countries(
dt                 = dt_use,
countries_selected = countries_selected,
year_selected      = year1_selected,
indicator          = indicator,
welfare            = welfare,
window_length      = window_length
)
indicator <- indicator |> str_replace_all(" ", "_") |> str_to_lower()
setnames(
dt1,
old = c(tolower(indicator), "ImputeYears", "Impute_Forward"),
new = c("Indicator1", "ImputeYears1", "Impute_Forward1")
)
dt1 <- dt1[, .(country_name, year, Indicator1, MeanWelfare, ImputeYears1, Impute_Forward1, survey_comparability)]
# Data in Year 2
dt2 <- create_data_imputed_by_countries(
dt                 = dt_use,
countries_selected = countries_selected,
year_selected      = year2_selected,
indicator          = indicator,
welfare            = welfare,
window_length      = window_length
)
setnames(
dt2,
old = c(tolower(indicator), "ImputeYears", "Impute_Forward"),
new = c("Indicator2", "ImputeYears2", "Impute_Forward2")
)
dt2 <- dt2[, .(country_name, year, Indicator2, ImputeYears2, Impute_Forward2, region_name, survey_comparability)]
# Join the two years
dt_use <- joyn::merge(
dt1,
dt2,
keep = "inner",
match_type = "1:1",
by = c("country_name", "survey_comparability")
)
# Find the change in indicator
dt_use[, report:=NULL]
dt_use[, Change := Indicator1-Indicator2]
dt_use[, ChangeColor := ifelse(Change<0, "Negative", "Positive")]
dt_use[
Impute_Forward1 == TRUE & Impute_Forward2 == TRUE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected - ImputeYears1 + ImputeYears2
}
]
dt_use[
Impute_Forward1 == FALSE & Impute_Forward2 == TRUE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected + ImputeYears1 + ImputeYears2
}
]
dt_use[
Impute_Forward1 == TRUE & Impute_Forward2 == FALSE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected - ImputeYears1 - ImputeYears2
}
]
dt_use[
Impute_Forward1 == FALSE & Impute_Forward2 == FALSE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected + ImputeYears1 - ImputeYears2
}
]
dt_use[, AnnualizedChange := Change/ChangeYears]
dt_use[, Change := abs(Change)]
dt_use[, country_name := factor(country_name, levels = country_name[order(Indicator1)])]
dt_use <- na.omit(dt_use)
# Define tooltip
dt_use[
,
text_tooltip :=
paste0(
"Economy: ", country_name, "\n",
"Region: ", region_name, "\n",
"Initial Value: ", round(Indicator1, 2), "\n",
"Annualized Change: ", round(AnnualizedChange, 2)
)
]
# Return
return(dt_use)
}
dt_impute_2years <- create_data_imputed_by_countries_two_years(dt = dt_pip, countries_selected = dt_pip$country_name |> unique(), year1_selected = 2010, year2_selected = 2020, indicator = "Gini")
warnings()
dt_impute
dt_impute2
dt_impute2[missing == FALSE]
dt_impute2[missing == TRUE]
dt_impute2[missing == FALSE]
dt_impute1
dt_impute
dt_i <- create_data_imputed_by_countries_two_years(dt, countries_selected = c("South Africa", "Colombia", "United States", "Germany"), year1_selected = 1998, year2_selected = 2002)
dt_i <- create_data_imputed_by_countries_two_years(dt, countries_selected = c("South Africa", "Colombia", "United States", "Germany"), year1_selected = 1998, year2_selected = 2002, indicator = "Gini")
dt_i <- create_data_imputed_by_countries_two_years(dt=dt_pip, countries_selected = c("South Africa", "Colombia", "United States", "Germany"), year1_selected = 1998, year2_selected = 2002, indicator = "Gini")
dt_i
dt_i
dt_i
dt_i_w <- create_data_imputed_by_countries_two_years(dt=dt_pip, countries_selected = c("South Africa", "Colombia", "United States", "Germany"), year1_selected = 1998, year2_selected = 2002, indicator = "Gini", window_length = 5)
dt_i_w
dt_i_w
dt_i_w <- create_data_imputed_by_countries_two_years(dt=dt_pip, countries_selected = c("South Africa", "Colombia", "United States", "Germany"), year1_selected = 1998, year2_selected = 2002, indicator = "Gini", window_length = 10)
dt_i_w
dt_i_w
dt_impute <- create_data_imputed_by_countries(dt = dt_pip)
dt_impute
dt_impute
dt_impute <- create_data_imputed_by_countries(dt = dt_pip, year = 2000)
dt_impute
dt_impute
h4()
h6()
?p()
dt_pip |> colnames()
source_text <- paste("Source: World Bank, Poverty and Inequality Platform (version 20230919_2017).")
# Total pip output
# Step 1: data ----
dt_pip <- pipr::get_stats(format = "rds")  # install entire data
dt_pip <- data.table(dt_pip) # as data.table
dt_pip[
,
`:=`(
top_10_bottom_40_ratio = (decile10)/(decile1 + decile2 + decile3 + decile4),
top_20_bottom_20_ratio = (decile10+decile9)/(decile1 + decile2)
)
]
dt_pip[,
gini:= gini*100]
# Step 2: creating general objects ----
pip_countries <- unique(dt_pip$country_name) # list of countries
pip_countries_multiple_welfare_type <-
dt_pip[,
if(.N>1) .SD,
by = .(country_name, year, welfare_type)
]$country_name |>
unique()
pip_countries_multiple_reporting_level <-
dt_pip[,
if(.N > 1)
.SD,
by = .(country_name, year, reporting_level)
]$country_name |>
unique()
pip_countries_regions <-
unique(dt_pip,
by = c("country_name", "region_code")
)[,
.(country_name, region_code, region_name)
]
region_matching <- unique(
dt_pip[
,
.(region_name),
by = region_code
]
)
# Exclude double rows
dt_pip <-
dt_pip[,
if (.N > 1) {
.SD[!reporting_level == "rural"]
} else {
.SD
},
by = .(country_name, year, welfare_type)
][,
if (.N > 1) {
.SD[reporting_level == "national"]
} else {
.SD
},
by = .(country_name, year, welfare_type)
]
dt_pip <-
dt_pip[,
if (.N > 1) {
.SD[welfare_type == "income"]
} else {
.SD
},
by = .(country_name, year, reporting_level)
]
# make deciles percentages
dec_cols <- paste0("decile", 1:10)
# Multiply each decile column by 100
dt_pip[, (paste0("decile", 1:10)) := lapply(.SD, function(x) x * 100), .SDcols = paste0("decile", 1:10)]
# Income groups
dt_class <- haven::read_dta(
here::here("data", "CLASS.dta")
)
dt_class <- dt_class |>
as.data.table() |>
unique(
by = c("economy", "incgroup_current")
)
dt_pip <- joyn::merge(
x = dt_pip,
y = dt_class,
by = c("country_name = economy"),
keep = "left",
yvars = "incgroup_current"
)
dt_pip[
,
report := NULL
]
dt_pip |> colnames()
str_to_title("t10_b40")
c("a") %chin% c("a", b)
c("a") %chin% c("a", "b")
c("a")==c("a", "b")
!c("a")==c("a", "b")
str_to_lower("MLD")
dt_pip }> head()
dt_pip |> head()
log(0.11)
log(0.5)
bla <- c()
bla <- c()
se_cntr <- c("SA", "COL", "GER")
all_cntr <- c(se_cntr, "BRA", "SWITZ", "BOTS")
reg <- c("SSA", "SOE","SSA", "SOE","SSA", "SOE")
inc <- c("A", "B", "C","A", "B", "C")
bla
# Create a data.table
dt <- data.table(all_cntr = all_cntr, reg = reg)
# Modify the 'bla' column based on the condition
dt[, bla := ifelse(all_cntr %in% se_cntr, reg, "NOT")]
# Extract the 'bla' column to a vector
bla <- dt$bla
bla
bla <- c()
Check <- c("Region")
se_cntr <- c("SA", "COL", "GER")
all_cntr <- c(se_cntr, "BRA", "SWITZ", "BOTS")
reg <- c("SSA", "SOE","SSA", "SOE","SSA", "SOE")
inc <- c("A", "B", "C","A", "B", "C")
bla
# Create a data.table
dt <- data.table(all_cntr = all_cntr, reg = reg, inc = inc)
# Conditionally define 'bla' based on the value of 'Check'
if (Check == "Region") {
dt[, bla := ifelse(all_cntr %in% se_cntr, reg, "NOT")]
} else if (Check == "Inc") {
dt[, bla := ifelse(all_cntr %in% se_cntr, inc, "NOT")]
}
# Extract the 'bla' column to a vector
bla <- dt$bla
bla
bla <- c()
Check <- c("Inc")
se_cntr <- c("SA", "COL", "GER")
all_cntr <- c(se_cntr, "BRA", "SWITZ", "BOTS")
reg <- c("SSA", "SOE","SSA", "SOE","SSA", "SOE")
inc <- c("A", "B", "C","A", "B", "C")
bla
# Create a data.table
dt <- data.table(all_cntr = all_cntr, reg = reg)
# Modify the 'bla' column based on the condition
dt[, bla := ifelse(
all_cntr %in% se_cntr,
reg,
"NOT"
)]
# Extract the 'bla' column to a vector
bla <- dt$bla
bla
# Create a data.table
dt <- data.table(all_cntr = all_cntr, reg = reg, inc = inc)
# Conditionally define 'bla' based on the value of 'Check'
if (Check == "Region") {
dt[, bla := ifelse(all_cntr %in% se_cntr, reg, "NOT")]
} else if (Check == "Inc") {
dt[, bla := ifelse(all_cntr %in% se_cntr, inc, "NOT")]
}
# Extract the 'bla' column to a vector
bla <- dt$bla
bla
brewer.pal
??brewer.pal
create_data_imputed_by_countries(dt = dt_piip)
create_data_imputed_by_countries(dt = dt_pip)
dt_impute<-create_data_imputed_by_countries(dt = dt_pip)
dt_impute
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, countries_selected = c("United States", "Botswana"))
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, countries_selected = c("United States", "Botswana"), window_length = 1)
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, countries_selected = c("United States", "Botswana"), window_length = 2)
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, countries_selected = c("United States", "Botswana"), window_length = 3)
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, countries_selected = c("United States", "Botswana"), window_length = 10)
dt_impute
dt_impute
dt_pip[country_name == "South Africa"]
dt_impute <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2005, year2_selected = 2008)
dt_impute
dt_impute
dt_impute <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2006, year2_selected = 2008)
dt_impute
dt_impute
dt_impute <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2006, year2_selected = 2008, window_length = 1)
dt_impute
dt_impute
dt_impute<-create_data_imputed_by_countries(dt = dt_pip, year = 2006)
dt_impute
dt_impute
dt_pip[country_name == "South Africa"]
dt_impute <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2006, year2_selected = 2008, window_length = 1)
dt_impute
dt_impute
dt_impute <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2006, year2_selected = 2008, window_length = 1)
create_data_imputed_by_countries_two_years <- function(
dt = dt_pip,
countries_selected  = c("South Africa", "Colombia", "United States"),
year1_selected      = 1998,
year2_selected      = 2005,
indicator           = c("Gini"),
window_length       = 2
){
dt_use <- copy(dt)
dt_use <- dt_use[, MeanWelfare := mean]
# Data in Year 1
dt1 <- create_data_imputed_by_countries(
dt                 = dt_use,
countries_selected = countries_selected,
year_selected      = year1_selected,
indicator          = indicator,
window_length      = window_length
)
indicator <- indicator |> str_replace_all(" ", "_") |> str_to_lower()
setnames(
dt1,
old = c(tolower(indicator), "ImputeYears", "Impute_Forward"),
new = c("Indicator1", "ImputeYears1", "Impute_Forward1")
)
dt1 <- dt1[, .(country_name, year, Indicator1, MeanWelfare, ImputeYears1, Impute_Forward1, survey_comparability)]
# Data in Year 2
dt2 <- create_data_imputed_by_countries(
dt                 = dt_use,
countries_selected = countries_selected,
year_selected      = year2_selected,
indicator          = indicator,
window_length      = window_length
)
setnames(
dt2,
old = c(tolower(indicator), "ImputeYears", "Impute_Forward"),
new = c("Indicator2", "ImputeYears2", "Impute_Forward2")
)
dt2 <- dt2[, .(country_name, year, Indicator2, ImputeYears2, Impute_Forward2, region_name, survey_comparability)]
# Join the two years
dt_use <- joyn::merge(
dt1,
dt2,
keep = "inner",
match_type = "1:1",
by = c("country_name", "survey_comparability")
)
# Find the change in indicator
dt_use[, report:=NULL]
dt_use[, Change := Indicator1-Indicator2]
dt_use[, ChangeColor := ifelse(Change<0, "Negative", "Positive")]
dt_use[
Impute_Forward1 == TRUE & Impute_Forward2 == TRUE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected - ImputeYears1 + ImputeYears2
}
]
dt_use[
Impute_Forward1 == FALSE & Impute_Forward2 == TRUE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected + ImputeYears1 + ImputeYears2
}
]
dt_use[
Impute_Forward1 == TRUE & Impute_Forward2 == FALSE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected - ImputeYears1 - ImputeYears2
}
]
dt_use[
Impute_Forward1 == FALSE & Impute_Forward2 == FALSE, # both forward imputed, or not imputed at all
ChangeYears := {
year2_selected - year1_selected + ImputeYears1 - ImputeYears2
}
]
dt_use[, AnnualizedChange := Change/ChangeYears]
dt_use[, Change := abs(Change)]
dt_use[, country_name := factor(country_name, levels = country_name[order(Indicator1)])]
#dt_use <- na.omit(dt_use)
# Define tooltip
dt_use[
,
text_tooltip :=
paste0(
"Economy: ", country_name, "\n",
"Region: ", region_name, "\n",
"Initial Value: ", round(Indicator1, 2), "\n",
"Annualized Change: ", round(AnnualizedChange, 2)
)
]
# Return
return(dt_use)
}
dt_impute2 <- create_data_imputed_by_countries_two_years(dt_pip, year1_selected = 2006, year2_selected = 2008, window_length = 1)
dt_impute2
dt_impute2
dt_impute
# Income groups
dt_class <- haven::read_dta(
here::here("data", "CLASS.dta")
)
dt_class <- dt_class |>
as.data.table()
dt_class <- dt_class |>
as.data.table() |>
unique(
by = c("economy", "incgroup_current")
)
dt_class[incgroup_current == NA]
dt_class
dt_class$economy |> unique()
[economy %chin% c("Türkiye", "São Tomé and Príncipe", "Côte d'Ivoire")]
dt_pip[economy %chin% c("Türkiye", "São Tomé and Príncipe", "Côte d'Ivoire")]
dt_class[economy %chin% c("Türkiye", "São Tomé and Príncipe", "Côte d'Ivoire")]
dt_pip[country_name == "Turkey"]
dt_pip$country_name |> unique()
